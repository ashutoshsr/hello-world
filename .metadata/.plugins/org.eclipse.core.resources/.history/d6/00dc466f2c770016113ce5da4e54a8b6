package com.ashu.core;

public class PostFix {

	public static void main(String[] args) {
		char[] expression = "a+b*(c^d-e)^(f+g*h)-i".toCharArray();
		StackImpl<Character> stack = new StackImpl<Character>(expression.length, Character.class);
		final String precedenceArray = new String("-+*^)(");
		for (char c : expression) {
			// if char is not operator, output
			int readIndex = precedenceArray.indexOf(c);
			if (readIndex < 0) {
				System.out.println(c);
				continue;
			}
			while (!stack.isEmpty()) {
				if (readIndex > precedenceArray.indexOf(stack.top())) {
					stack.push(c);
					continue;
				} else {
					System.out.println(stack.top());
					stack.pop();
				}
			}
			if (stack.isEmpty()) {
				stack.push(c);
			}
			// encountered ')'
			if (readIndex == 4) {
				while (!stack.isEmpty()) {
					char bracketExpectedRead = stack.top();
					System.out.println(bracketExpectedRead);
					if (precedenceArray.indexOf(bracketExpectedRead) == 5) {
						break;
					}
				}
			}
		}

	}

}
